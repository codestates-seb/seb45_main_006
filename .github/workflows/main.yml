name: Java CI with Gradle

on:
  push:
    branches: [develop]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11 # JDK 설정, 점검
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'zulu'

      - name: Grant execute permission for gradlew # 실행 권한 부여
        run: chmod +x server/DevSquad/gradlew
      - name: Build with Gradle # ./gradlew 로 빌드
        working-directory: server/DevSquad
        run: ./gradlew clean build


      - name: Docker build # 도커로 이미지 생성 후 DockerHub에 배포
        run: |
          docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}
          docker build -t devsquad -f server/DevSquad/Dockerfile .
          docker tag devsquad ehdals0405/devsquad:${GITHUB_SHA::7}
          docker push ehdals0405/devsquad:${GITHUB_SHA::7}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      - name: Start Session Manager session
        run: aws ssm start-session --target i-01634e0fd4578a1dc
      - name: Deploy to Server
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ap-northeast-2
        run: |
          aws ssm send-command \
            --instance-id i-01634e0fd4578a1dc \
            --document-name "AWS-RunShellScript" \
            --parameters "commands=[
              'if sudo docker ps -a --format \\'{{.Names}}\\' | grep -q \'^server$\\'; then',
              '  sudo docker stop server',
              '  sudo docker rm server',
              'fi',
              'sudo docker pull ehdals0405/devsquad:${GITHUB_SHA::7}',
              'sudo docker tag ehdals0405/devsquad:${GITHUB_SHA::7} devsquad',
              'sudo docker run -d --name server --env-file env_file -p 8080:8080 devsquad'
            ]" \
            --output text